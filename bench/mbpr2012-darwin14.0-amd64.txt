PASS
benchmark                                 iter       time/iter   bytes alloc         allocs
---------                                 ----       ---------   -----------         ------
BenchmarkMakeMap                      10000000    162.00 ns/op       48 B/op    1 allocs/op
BenchmarkMakeMap100                     200000   6343.00 ns/op     4656 B/op    2 allocs/op
BenchmarkMakeSlice                    50000000     38.50 ns/op        0 B/op    0 allocs/op
BenchmarkMakeSliceLen100               1000000   2394.00 ns/op     1664 B/op    1 allocs/op
BenchmarkMakeSliceCap100               1000000   2392.00 ns/op     1664 B/op    1 allocs/op
BenchmarkMakeChan                     10000000    173.00 ns/op       96 B/op    1 allocs/op
BenchmarkMakeChan1                     5000000    242.00 ns/op      112 B/op    2 allocs/op
BenchmarkMakeChan100                    500000   2514.00 ns/op     1760 B/op    2 allocs/op
BenchmarkNewString                    30000000     56.40 ns/op       16 B/op    1 allocs/op
BenchmarkNewSmallStruct               20000000     84.80 ns/op       32 B/op    1 allocs/op
BenchmarkNewSmallStructLit          2000000000      0.92 ns/op        0 B/op    0 allocs/op
BenchmarkNewSmallStructLitP           20000000     85.00 ns/op       32 B/op    1 allocs/op
BenchmarkNewBigStruct                  5000000    370.00 ns/op      208 B/op    1 allocs/op
BenchmarkNewBigStructLit             200000000      8.89 ns/op        0 B/op    0 allocs/op
BenchmarkNewBigStructLitP              5000000    376.00 ns/op      208 B/op    1 allocs/op
BenchmarkNewClosure                   30000000     59.20 ns/op       16 B/op    1 allocs/op
BenchmarkArrayIndex                 2000000000      0.93 ns/op        0 B/op    0 allocs/op
BenchmarkArrayIndex2                2000000000      1.23 ns/op        0 B/op    0 allocs/op
BenchmarkArrayIndex3                2000000000      1.64 ns/op        0 B/op    0 allocs/op
BenchmarkArraySlicing                500000000      3.78 ns/op        0 B/op    0 allocs/op
BenchmarkSliceIndex                 2000000000      1.00 ns/op        0 B/op    0 allocs/op
BenchmarkIfacePtrTypeAssertShort     100000000     11.30 ns/op        0 B/op    0 allocs/op
BenchmarkIfacePtrTypeAssertWithOk    200000000      9.56 ns/op        0 B/op    0 allocs/op
BenchmarkIfaceTypeAssertShort        200000000      9.17 ns/op        0 B/op    0 allocs/op
BenchmarkIfaceTypeAssertWithOk       200000000      9.57 ns/op        0 B/op    0 allocs/op
BenchmarkIfaceTypeSwitch             200000000      6.85 ns/op        0 B/op    0 allocs/op
BenchmarkBitAnd                     2000000000      0.64 ns/op        0 B/op    0 allocs/op
BenchmarkBitOr                      2000000000      0.64 ns/op        0 B/op    0 allocs/op
BenchmarkBitXor                     2000000000      0.64 ns/op        0 B/op    0 allocs/op
BenchmarkBitAndNot                  2000000000      0.64 ns/op        0 B/op    0 allocs/op
BenchmarkBitShiftLeft               2000000000      0.62 ns/op        0 B/op    0 allocs/op
BenchmarkBitShiftRight              2000000000      0.62 ns/op        0 B/op    0 allocs/op
BenchmarkByteIndex                   100000000     12.60 ns/op        0 B/op    0 allocs/op
BenchmarkByteReplace                   3000000    438.00 ns/op       48 B/op    1 allocs/op
BenchmarkByteToUpper                   2000000    764.00 ns/op       48 B/op    1 allocs/op
BenchmarkByteToLower                   2000000    795.00 ns/op       48 B/op    1 allocs/op
BenchmarkSwitch                     2000000000      1.84 ns/op        0 B/op    0 allocs/op
BenchmarkIfEquals                   1000000000      2.12 ns/op        0 B/op    0 allocs/op
BenchmarkIfNotEquals                1000000000      2.20 ns/op        0 B/op    0 allocs/op
BenchmarkFor1                       2000000000      0.62 ns/op        0 B/op    0 allocs/op
BenchmarkFor3                       2000000000      1.86 ns/op        0 B/op    0 allocs/op
BenchmarkForRange                   2000000000      1.84 ns/op        0 B/op    0 allocs/op
BenchmarkForRangeClosedChan           50000000     33.90 ns/op        0 B/op    0 allocs/op
BenchmarkSelectBlockedDefault        100000000     10.50 ns/op        0 B/op    0 allocs/op
BenchmarkSelectBlockedClosed          10000000    185.00 ns/op        0 B/op    0 allocs/op
BenchmarkSelectTrySend               100000000     10.10 ns/op        0 B/op    0 allocs/op
BenchmarkPanicRecover                 10000000    240.00 ns/op       16 B/op    1 allocs/op
BenchmarkSelectTrySendBuf            100000000     12.00 ns/op        0 B/op    0 allocs/op
BenchmarkFunc1                       500000000      3.15 ns/op        0 B/op    0 allocs/op
BenchmarkFunc2                       500000000      3.86 ns/op        0 B/op    0 allocs/op
BenchmarkFunc3                       500000000      3.86 ns/op        0 B/op    0 allocs/op
BenchmarkConvIntToFloat64           2000000000      0.93 ns/op        0 B/op    0 allocs/op
BenchmarkConvFloat64ToInt           2000000000      0.63 ns/op        0 B/op    0 allocs/op
BenchmarkConvIntToFloat32           2000000000      0.93 ns/op        0 B/op    0 allocs/op
BenchmarkConvFloat32ToInt           2000000000      0.64 ns/op        0 B/op    0 allocs/op
BenchmarkConvStringToInt              50000000     31.80 ns/op        0 B/op    0 allocs/op
BenchmarkConvIntToString              30000000     49.20 ns/op        1 B/op    1 allocs/op
BenchmarkStringToByte                 30000000     54.40 ns/op        8 B/op    1 allocs/op
BenchmarkByteToString                 30000000     46.30 ns/op        4 B/op    1 allocs/op
BenchmarkFindSliceInt5               200000000      8.68 ns/op        0 B/op    0 allocs/op
BenchmarkFindSliceStr5                50000000     33.50 ns/op        0 B/op    0 allocs/op
BenchmarkFindSliceInt100              10000000    134.00 ns/op        0 B/op    0 allocs/op
BenchmarkFindSliceStr100               2000000    625.00 ns/op        0 B/op    0 allocs/op
BenchmarkFindMapInt5                 100000000     11.80 ns/op        0 B/op    0 allocs/op
BenchmarkFindMapStr5                  30000000     42.60 ns/op        0 B/op    0 allocs/op
BenchmarkFindMapInt100               100000000     19.60 ns/op        0 B/op    0 allocs/op
BenchmarkFindMapStr100                50000000     37.40 ns/op        0 B/op    0 allocs/op
BenchmarkFloat32Assign              2000000000      0.62 ns/op        0 B/op    0 allocs/op
BenchmarkFloat32Inc                 1000000000      2.76 ns/op        0 B/op    0 allocs/op
BenchmarkFloat32Add                 2000000000      0.64 ns/op        0 B/op    0 allocs/op
BenchmarkFloat32Sub                 2000000000      0.61 ns/op        0 B/op    0 allocs/op
BenchmarkFloat32Mul                 2000000000      0.62 ns/op        0 B/op    0 allocs/op
BenchmarkFloat32Mod                  100000000     18.70 ns/op        0 B/op    0 allocs/op
BenchmarkFloat64Assign              2000000000      0.62 ns/op        0 B/op    0 allocs/op
BenchmarkFloat64Inc                 1000000000      2.76 ns/op        0 B/op    0 allocs/op
BenchmarkFloat64Add                 2000000000      0.62 ns/op        0 B/op    0 allocs/op
BenchmarkFloat64Sub                 2000000000      0.64 ns/op        0 B/op    0 allocs/op
BenchmarkFloat64Mul                 2000000000      0.64 ns/op        0 B/op    0 allocs/op
BenchmarkFloat64Mod                  100000000     19.20 ns/op        0 B/op    0 allocs/op
BenchmarkGoroWait                      2000000    740.00 ns/op       52 B/op    3 allocs/op
BenchmarkGoroSend                      5000000    261.00 ns/op        0 B/op    0 allocs/op
BenchmarkGoroSendBuf1                  3000000    495.00 ns/op        0 B/op    0 allocs/op
BenchmarkGoroSendBuf100               20000000     88.70 ns/op        0 B/op    0 allocs/op
BenchmarkIntAssign                  2000000000      0.62 ns/op        0 B/op    0 allocs/op
BenchmarkIntInc                     2000000000      1.84 ns/op        0 B/op    0 allocs/op
BenchmarkIntAdd                     2000000000      0.61 ns/op        0 B/op    0 allocs/op
BenchmarkIntSub                     2000000000      0.63 ns/op        0 B/op    0 allocs/op
BenchmarkIntMul                     2000000000      0.62 ns/op        0 B/op    0 allocs/op
BenchmarkIntDiv                      200000000      9.94 ns/op        0 B/op    0 allocs/op
BenchmarkIntMod                      200000000      9.79 ns/op        0 B/op    0 allocs/op
BenchmarkPrintln                      10000000    200.00 ns/op       16 B/op    1 allocs/op
BenchmarkEmptyPrint                   10000000    209.00 ns/op       16 B/op    1 allocs/op
BenchmarkPrintPctd                     5000000    247.00 ns/op        8 B/op    1 allocs/op
BenchmarkPrintPctb                     5000000    241.00 ns/op        8 B/op    1 allocs/op
BenchmarkPrintPctc                    10000000    214.00 ns/op        8 B/op    1 allocs/op
BenchmarkPrintPcto                    10000000    230.00 ns/op        8 B/op    1 allocs/op
BenchmarkPrintPctxInt                 10000000    227.00 ns/op        8 B/op    1 allocs/op
BenchmarkPrintPctU                    10000000    234.00 ns/op        8 B/op    1 allocs/op
BenchmarkPrintPcts                     5000000    242.00 ns/op       16 B/op    1 allocs/op
BenchmarkPrintPctq                     3000000    444.00 ns/op       32 B/op    4 allocs/op
BenchmarkPrintPctxString               5000000    355.00 ns/op       24 B/op    2 allocs/op
BenchmarkPrintPctxByte                10000000    218.00 ns/op        4 B/op    1 allocs/op
BenchmarkPrintPctt                    10000000    173.00 ns/op        1 B/op    1 allocs/op
BenchmarkPrintPctT                     5000000    323.00 ns/op       32 B/op    2 allocs/op
BenchmarkPrintPctf                     2000000    790.00 ns/op        8 B/op    1 allocs/op
BenchmarkPrintPcte                     3000000    424.00 ns/op        8 B/op    1 allocs/op
BenchmarkPrintPctp                    10000000    194.00 ns/op        0 B/op    0 allocs/op
BenchmarkPrintStringer                 3000000    526.00 ns/op       24 B/op    2 allocs/op
BenchmarkMathAbs                    1000000000      2.75 ns/op        0 B/op    0 allocs/op
BenchmarkMathCos                     100000000     13.40 ns/op        0 B/op    0 allocs/op
BenchmarkMathSin                     100000000     13.40 ns/op        0 B/op    0 allocs/op
BenchmarkMathPow                      20000000    109.00 ns/op        0 B/op    0 allocs/op
BenchmarkMathLog                     100000000     14.50 ns/op        0 B/op    0 allocs/op
BenchmarkMathExp                     100000000     16.10 ns/op        0 B/op    0 allocs/op
BenchmarkMathSqrt                    300000000      4.30 ns/op        0 B/op    0 allocs/op
BenchmarkMathMax                     300000000      4.00 ns/op        0 B/op    0 allocs/op
BenchmarkMathMin                     500000000      3.96 ns/op        0 B/op    0 allocs/op
BenchmarkMathRand                     50000000     29.50 ns/op        0 B/op    0 allocs/op
BenchmarkReflFromVal                  50000000     26.70 ns/op        0 B/op    0 allocs/op
BenchmarkReflToVal                    30000000     59.70 ns/op        8 B/op    1 allocs/op
BenchmarkReflPtrFromVal               50000000     29.70 ns/op        0 B/op    0 allocs/op
BenchmarkReflPtrToVal                100000000     12.30 ns/op        0 B/op    0 allocs/op
BenchmarkReflSmallStructFields        10000000    240.00 ns/op       32 B/op    3 allocs/op
BenchmarkReflLargeStructFields         1000000   1956.00 ns/op      352 B/op   19 allocs/op
BenchmarkStringIndex                 100000000     11.20 ns/op        0 B/op    0 allocs/op
BenchmarkStringReplace                 3000000    506.00 ns/op       96 B/op    2 allocs/op
BenchmarkStringToUpper                 1000000   1026.00 ns/op       96 B/op    2 allocs/op
BenchmarkStringToLower                 1000000   1057.00 ns/op       96 B/op    2 allocs/op
ok  	github.com/PuerkitoBio/gocostmodel	246.294s
