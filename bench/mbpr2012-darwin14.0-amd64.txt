PASS
BenchmarkMakeMap	10000000	       167 ns/op	      48 B/op	       1 allocs/op
BenchmarkMakeMap100	  200000	      6826 ns/op	    4656 B/op	       2 allocs/op
BenchmarkMakeSlice	50000000	        38.5 ns/op	       0 B/op	       0 allocs/op
BenchmarkMakeSliceLen100	  500000	      2576 ns/op	    1664 B/op	       1 allocs/op
BenchmarkMakeSliceCap100	  500000	      2595 ns/op	    1664 B/op	       1 allocs/op
BenchmarkMakeChan	10000000	       184 ns/op	      96 B/op	       1 allocs/op
BenchmarkMakeChan1	 5000000	       253 ns/op	     112 B/op	       2 allocs/op
BenchmarkMakeChan100	  500000	      2705 ns/op	    1760 B/op	       2 allocs/op
BenchmarkNewString	30000000	        54.4 ns/op	      16 B/op	       1 allocs/op
BenchmarkNewSmallStruct	20000000	        87.3 ns/op	      32 B/op	       1 allocs/op
BenchmarkNewSmallStructLit	2000000000	         0.93 ns/op	       0 B/op	       0 allocs/op
BenchmarkNewSmallStructLitP	20000000	        86.9 ns/op	      32 B/op	       1 allocs/op
BenchmarkNewBigStruct	 5000000	       397 ns/op	     208 B/op	       1 allocs/op
BenchmarkNewBigStructLit	200000000	         9.21 ns/op	       0 B/op	       0 allocs/op
BenchmarkNewBigStructLitP	 3000000	       403 ns/op	     208 B/op	       1 allocs/op
BenchmarkNewClosure	30000000	        57.2 ns/op	      16 B/op	       1 allocs/op
BenchmarkArrayIndex	2000000000	         0.92 ns/op	       0 B/op	       0 allocs/op
BenchmarkArrayIndex2	2000000000	         1.23 ns/op	       0 B/op	       0 allocs/op
BenchmarkArrayIndex3	2000000000	         1.76 ns/op	       0 B/op	       0 allocs/op
BenchmarkArraySlicing	500000000	         3.79 ns/op	       0 B/op	       0 allocs/op
BenchmarkSliceIndex	2000000000	         0.99 ns/op	       0 B/op	       0 allocs/op
BenchmarkBitAnd	2000000000	         0.61 ns/op	       0 B/op	       0 allocs/op
BenchmarkBitOr	2000000000	         1.30 ns/op	       0 B/op	       0 allocs/op
BenchmarkBitXor	2000000000	         0.61 ns/op	       0 B/op	       0 allocs/op
BenchmarkBitAndNot	2000000000	         1.08 ns/op	       0 B/op	       0 allocs/op
BenchmarkBitShiftLeft	2000000000	         0.61 ns/op	       0 B/op	       0 allocs/op
BenchmarkBitShiftRight	2000000000	         1.47 ns/op	       0 B/op	       0 allocs/op
BenchmarkByteIndex	100000000	        13.5 ns/op	       0 B/op	       0 allocs/op
BenchmarkByteReplace	 3000000	       429 ns/op	      48 B/op	       1 allocs/op
BenchmarkByteToUpper	 2000000	       779 ns/op	      48 B/op	       1 allocs/op
BenchmarkByteToLower	 2000000	       794 ns/op	      48 B/op	       1 allocs/op
BenchmarkSwitch	2000000000	         1.85 ns/op	       0 B/op	       0 allocs/op
BenchmarkIfEquals	1000000000	         2.16 ns/op	       0 B/op	       0 allocs/op
BenchmarkIfNotEquals	1000000000	         2.10 ns/op	       0 B/op	       0 allocs/op
BenchmarkFor1	2000000000	         0.62 ns/op	       0 B/op	       0 allocs/op
BenchmarkFor3	2000000000	         1.84 ns/op	       0 B/op	       0 allocs/op
BenchmarkForRange	2000000000	         1.84 ns/op	       0 B/op	       0 allocs/op
BenchmarkForRangeClosedChan	50000000	        34.0 ns/op	       0 B/op	       0 allocs/op
BenchmarkSelectBlockedDefault	100000000	        10.3 ns/op	       0 B/op	       0 allocs/op
BenchmarkSelectBlockedClosed	10000000	       185 ns/op	       0 B/op	       0 allocs/op
BenchmarkSelectTrySend	100000000	        10.8 ns/op	       0 B/op	       0 allocs/op
BenchmarkSelectTrySendBuf	100000000	        11.3 ns/op	       0 B/op	       0 allocs/op
BenchmarkFunc1	500000000	         3.23 ns/op	       0 B/op	       0 allocs/op
BenchmarkFunc2	500000000	         3.88 ns/op	       0 B/op	       0 allocs/op
BenchmarkFunc3	500000000	         3.76 ns/op	       0 B/op	       0 allocs/op
BenchmarkConvIntToFloat64	2000000000	         0.92 ns/op	       0 B/op	       0 allocs/op
BenchmarkConvFloat64ToInt	2000000000	         0.62 ns/op	       0 B/op	       0 allocs/op
BenchmarkConvIntToFloat32	2000000000	         0.92 ns/op	       0 B/op	       0 allocs/op
BenchmarkConvFloat32ToInt	2000000000	         0.62 ns/op	       0 B/op	       0 allocs/op
BenchmarkConvStringToInt	50000000	        29.7 ns/op	       0 B/op	       0 allocs/op
BenchmarkConvIntToString	30000000	        49.0 ns/op	       1 B/op	       1 allocs/op
BenchmarkStringToByte	30000000	        54.2 ns/op	       8 B/op	       1 allocs/op
BenchmarkByteToString	30000000	        42.8 ns/op	       4 B/op	       1 allocs/op
BenchmarkFindSliceInt5	200000000	         8.88 ns/op	       0 B/op	       0 allocs/op
BenchmarkFindSliceStr5	50000000	        34.5 ns/op	       0 B/op	       0 allocs/op
BenchmarkFindSliceInt100	10000000	       133 ns/op	       0 B/op	       0 allocs/op
BenchmarkFindSliceStr100	 2000000	       648 ns/op	       0 B/op	       0 allocs/op
BenchmarkFindMapInt5	100000000	        11.0 ns/op	       0 B/op	       0 allocs/op
BenchmarkFindMapStr5	30000000	        42.6 ns/op	       0 B/op	       0 allocs/op
BenchmarkFindMapInt100	50000000	        28.0 ns/op	       0 B/op	       0 allocs/op
BenchmarkFindMapStr100	50000000	        32.9 ns/op	       0 B/op	       0 allocs/op
BenchmarkFloat32Assign	2000000000	         0.63 ns/op	       0 B/op	       0 allocs/op
BenchmarkFloat32Inc	1000000000	         2.76 ns/op	       0 B/op	       0 allocs/op
BenchmarkFloat32Add	2000000000	         0.61 ns/op	       0 B/op	       0 allocs/op
BenchmarkFloat32Sub	2000000000	         0.64 ns/op	       0 B/op	       0 allocs/op
BenchmarkFloat32Mul	2000000000	         0.63 ns/op	       0 B/op	       0 allocs/op
BenchmarkFloat32Mod	100000000	        18.9 ns/op	       0 B/op	       0 allocs/op
BenchmarkFloat64Assign	2000000000	         0.63 ns/op	       0 B/op	       0 allocs/op
BenchmarkFloat64Inc	1000000000	         2.76 ns/op	       0 B/op	       0 allocs/op
BenchmarkFloat64Add	2000000000	         0.62 ns/op	       0 B/op	       0 allocs/op
BenchmarkFloat64Sub	2000000000	         0.64 ns/op	       0 B/op	       0 allocs/op
BenchmarkFloat64Mul	2000000000	         0.66 ns/op	       0 B/op	       0 allocs/op
BenchmarkFloat64Mod	100000000	        19.0 ns/op	       0 B/op	       0 allocs/op
BenchmarkGoroWait	 2000000	       732 ns/op	      52 B/op	       3 allocs/op
BenchmarkGoroSend	 5000000	       263 ns/op	       0 B/op	       0 allocs/op
BenchmarkGoroSendBuf1	 3000000	       501 ns/op	       0 B/op	       0 allocs/op
BenchmarkGoroSendBuf100	20000000	        87.8 ns/op	       0 B/op	       0 allocs/op
BenchmarkIntAssign	2000000000	         0.63 ns/op	       0 B/op	       0 allocs/op
BenchmarkIntInc	2000000000	         1.84 ns/op	       0 B/op	       0 allocs/op
BenchmarkIntAdd	2000000000	         0.63 ns/op	       0 B/op	       0 allocs/op
BenchmarkIntSub	2000000000	         0.64 ns/op	       0 B/op	       0 allocs/op
BenchmarkIntMul	2000000000	         0.62 ns/op	       0 B/op	       0 allocs/op
BenchmarkIntDiv	200000000	         9.96 ns/op	       0 B/op	       0 allocs/op
BenchmarkIntMod	200000000	         9.83 ns/op	       0 B/op	       0 allocs/op
BenchmarkPrintln	10000000	       198 ns/op	      16 B/op	       1 allocs/op
BenchmarkEmptyPrint	10000000	       202 ns/op	      16 B/op	       1 allocs/op
BenchmarkPrintPctd	10000000	       240 ns/op	       8 B/op	       1 allocs/op
BenchmarkPrintPctb	 5000000	       246 ns/op	       8 B/op	       1 allocs/op
BenchmarkPrintPctc	10000000	       212 ns/op	       8 B/op	       1 allocs/op
BenchmarkPrintPcto	10000000	       225 ns/op	       8 B/op	       1 allocs/op
BenchmarkPrintPctxInt	10000000	       231 ns/op	       8 B/op	       1 allocs/op
BenchmarkPrintPctU	 5000000	       227 ns/op	       8 B/op	       1 allocs/op
BenchmarkPrintPcts	10000000	       236 ns/op	      16 B/op	       1 allocs/op
BenchmarkPrintPctq	 3000000	       452 ns/op	      32 B/op	       4 allocs/op
BenchmarkPrintPctxString	 5000000	       335 ns/op	      24 B/op	       2 allocs/op
BenchmarkPrintPctxByte	10000000	       205 ns/op	       4 B/op	       1 allocs/op
BenchmarkPrintPctt	10000000	       181 ns/op	       1 B/op	       1 allocs/op
BenchmarkPrintPctT	 5000000	       336 ns/op	      32 B/op	       2 allocs/op
BenchmarkPrintPctf	 2000000	       757 ns/op	       8 B/op	       1 allocs/op
BenchmarkPrintPcte	 5000000	       396 ns/op	       8 B/op	       1 allocs/op
BenchmarkPrintPctp	10000000	       192 ns/op	       0 B/op	       0 allocs/op
BenchmarkPrintStringer	 3000000	       532 ns/op	      24 B/op	       2 allocs/op
BenchmarkAbs	1000000000	         2.63 ns/op	       0 B/op	       0 allocs/op
BenchmarkCos	100000000	        13.7 ns/op	       0 B/op	       0 allocs/op
BenchmarkSin	100000000	        13.6 ns/op	       0 B/op	       0 allocs/op
BenchmarkPow	20000000	       109 ns/op	       0 B/op	       0 allocs/op
BenchmarkLog	100000000	        14.5 ns/op	       0 B/op	       0 allocs/op
BenchmarkExp	100000000	        16.3 ns/op	       0 B/op	       0 allocs/op
BenchmarkSqrt	300000000	         4.29 ns/op	       0 B/op	       0 allocs/op
BenchmarkMax	500000000	         3.74 ns/op	       0 B/op	       0 allocs/op
BenchmarkMin	500000000	         3.90 ns/op	       0 B/op	       0 allocs/op
BenchmarkRand	50000000	        30.7 ns/op	       0 B/op	       0 allocs/op
BenchmarkStringIndex	100000000	        11.6 ns/op	       0 B/op	       0 allocs/op
BenchmarkStringReplace	 3000000	       509 ns/op	      96 B/op	       2 allocs/op
BenchmarkStringToUpper	 1000000	      1012 ns/op	      96 B/op	       2 allocs/op
BenchmarkStringToLower	 1000000	      1064 ns/op	      96 B/op	       2 allocs/op
ok  	github.com/PuerkitoBio/gocostmodel	224.721s
