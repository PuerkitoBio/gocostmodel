PASS
benchmark                           iter        time/iter   bytes alloc        allocs
---------                           ----        ---------   -----------        ------
BenchmarkMakeMap                 5000000     337.00 ns/op       48 B/op   1 allocs/op
BenchmarkMakeMap100               100000   13107.00 ns/op     4656 B/op   2 allocs/op
BenchmarkMakeSlice              20000000      85.90 ns/op        0 B/op   0 allocs/op
BenchmarkMakeSliceLen100          300000    5118.00 ns/op     1664 B/op   1 allocs/op
BenchmarkMakeSliceCap100          300000    5107.00 ns/op     1664 B/op   1 allocs/op
BenchmarkMakeChan                5000000     373.00 ns/op       96 B/op   1 allocs/op
BenchmarkMakeChan1               3000000     507.00 ns/op      112 B/op   2 allocs/op
BenchmarkMakeChan100              300000    5628.00 ns/op     1760 B/op   2 allocs/op
BenchmarkNewString              20000000     115.00 ns/op       16 B/op   1 allocs/op
BenchmarkNewSmallStruct         10000000     171.00 ns/op       32 B/op   1 allocs/op
BenchmarkNewSmallStructLit    1000000000       2.16 ns/op        0 B/op   0 allocs/op
BenchmarkNewSmallStructLitP     10000000     174.00 ns/op       32 B/op   1 allocs/op
BenchmarkNewBigStruct            2000000     764.00 ns/op      208 B/op   1 allocs/op
BenchmarkNewBigStructLit       100000000      21.60 ns/op        0 B/op   0 allocs/op
BenchmarkNewBigStructLitP        2000000     782.00 ns/op      208 B/op   1 allocs/op
BenchmarkNewClosure             10000000     129.00 ns/op       16 B/op   1 allocs/op
BenchmarkArrayIndex           2000000000       1.68 ns/op        0 B/op   0 allocs/op
BenchmarkArrayIndex2          1000000000       2.44 ns/op        0 B/op   0 allocs/op
BenchmarkArrayIndex3           500000000       3.32 ns/op        0 B/op   0 allocs/op
BenchmarkArraySlicing          200000000       8.64 ns/op        0 B/op   0 allocs/op
BenchmarkSliceIndex           2000000000       1.92 ns/op        0 B/op   0 allocs/op
BenchmarkBitAnd               2000000000       1.26 ns/op        0 B/op   0 allocs/op
BenchmarkBitOr                2000000000       1.28 ns/op        0 B/op   0 allocs/op
BenchmarkBitXor               2000000000       1.28 ns/op        0 B/op   0 allocs/op
BenchmarkBitAndNot            2000000000       1.44 ns/op        0 B/op   0 allocs/op
BenchmarkBitShiftLeft         2000000000       1.11 ns/op        0 B/op   0 allocs/op
BenchmarkBitShiftRight        2000000000       1.15 ns/op        0 B/op   0 allocs/op
BenchmarkByteIndex              50000000      29.90 ns/op        0 B/op   0 allocs/op
BenchmarkByteReplace             2000000     917.00 ns/op       48 B/op   1 allocs/op
BenchmarkByteToUpper             1000000    1485.00 ns/op       48 B/op   1 allocs/op
BenchmarkByteToLower             1000000    1595.00 ns/op       48 B/op   1 allocs/op
BenchmarkSwitch                300000000       4.32 ns/op        0 B/op   0 allocs/op
BenchmarkIfEquals              300000000       4.54 ns/op        0 B/op   0 allocs/op
BenchmarkIfNotEquals           300000000       4.52 ns/op        0 B/op   0 allocs/op
BenchmarkFor1                 2000000000       1.45 ns/op        0 B/op   0 allocs/op
BenchmarkFor3                  300000000       4.32 ns/op        0 B/op   0 allocs/op
BenchmarkForRange              300000000       4.32 ns/op        0 B/op   0 allocs/op
BenchmarkFunc1                2000000000       0.96 ns/op        0 B/op   0 allocs/op
BenchmarkFunc2                2000000000       1.26 ns/op        0 B/op   0 allocs/op
BenchmarkFunc3                2000000000       1.66 ns/op        0 B/op   0 allocs/op
BenchmarkConvIntToFloat64     1000000000       2.16 ns/op        0 B/op   0 allocs/op
BenchmarkConvFloat64ToInt     2000000000       1.26 ns/op        0 B/op   0 allocs/op
BenchmarkConvIntToFloat32     2000000000       1.44 ns/op        0 B/op   0 allocs/op
BenchmarkConvFloat32ToInt     2000000000       1.42 ns/op        0 B/op   0 allocs/op
BenchmarkConvStringToInt        30000000      57.80 ns/op        0 B/op   0 allocs/op
BenchmarkConvIntToString        20000000     108.00 ns/op        1 B/op   1 allocs/op
BenchmarkStringToByte           20000000     110.00 ns/op        8 B/op   1 allocs/op
BenchmarkByteToString           20000000      84.80 ns/op        4 B/op   1 allocs/op
BenchmarkFindSliceInt5         100000000      13.00 ns/op        0 B/op   0 allocs/op
BenchmarkFindSliceStr5          20000000      64.90 ns/op        0 B/op   0 allocs/op
BenchmarkFindSliceInt100        10000000     236.00 ns/op        0 B/op   0 allocs/op
BenchmarkFindSliceStr100         1000000    1248.00 ns/op        0 B/op   0 allocs/op
BenchmarkFindMapInt5           100000000      22.20 ns/op        0 B/op   0 allocs/op
BenchmarkFindMapStr5            20000000      77.60 ns/op        0 B/op   0 allocs/op
BenchmarkFindMapInt100          30000000      58.30 ns/op        0 B/op   0 allocs/op
BenchmarkFindMapStr100          20000000      76.20 ns/op        0 B/op   0 allocs/op
BenchmarkFloat32Assign        2000000000       0.99 ns/op        0 B/op   0 allocs/op
BenchmarkFloat32Inc            200000000       6.48 ns/op        0 B/op   0 allocs/op
BenchmarkFloat32Add           2000000000       1.26 ns/op        0 B/op   0 allocs/op
BenchmarkFloat32Sub           2000000000       1.26 ns/op        0 B/op   0 allocs/op
BenchmarkFloat32Mul           2000000000       1.26 ns/op        0 B/op   0 allocs/op
BenchmarkFloat32Mod             50000000      34.70 ns/op        0 B/op   0 allocs/op
BenchmarkFloat64Assign        2000000000       0.97 ns/op        0 B/op   0 allocs/op
BenchmarkFloat64Inc            200000000       6.47 ns/op        0 B/op   0 allocs/op
BenchmarkFloat64Add           2000000000       1.26 ns/op        0 B/op   0 allocs/op
BenchmarkFloat64Sub           2000000000       1.26 ns/op        0 B/op   0 allocs/op
BenchmarkFloat64Mul           2000000000       1.26 ns/op        0 B/op   0 allocs/op
BenchmarkFloat64Mod             50000000      35.00 ns/op        0 B/op   0 allocs/op
BenchmarkIntAssign            2000000000       1.00 ns/op        0 B/op   0 allocs/op
BenchmarkIntInc                300000000       4.31 ns/op        0 B/op   0 allocs/op
BenchmarkIntAdd               2000000000       1.26 ns/op        0 B/op   0 allocs/op
BenchmarkIntSub               2000000000       1.26 ns/op        0 B/op   0 allocs/op
BenchmarkIntMul               2000000000       1.26 ns/op        0 B/op   0 allocs/op
BenchmarkIntDiv                100000000      21.50 ns/op        0 B/op   0 allocs/op
BenchmarkIntMod                100000000      21.60 ns/op        0 B/op   0 allocs/op
BenchmarkPrintln                 3000000     423.00 ns/op       16 B/op   1 allocs/op
BenchmarkEmptyPrint              3000000     426.00 ns/op       16 B/op   1 allocs/op
BenchmarkPrintPctd               3000000     464.00 ns/op        8 B/op   1 allocs/op
BenchmarkPrintPctb               3000000     481.00 ns/op        8 B/op   1 allocs/op
BenchmarkPrintPctc               3000000     445.00 ns/op        8 B/op   1 allocs/op
BenchmarkPrintPcto               3000000     455.00 ns/op        8 B/op   1 allocs/op
BenchmarkPrintPctxInt            3000000     457.00 ns/op        8 B/op   1 allocs/op
BenchmarkPrintPctU               3000000     482.00 ns/op        8 B/op   1 allocs/op
BenchmarkPrintPcts               3000000     453.00 ns/op       16 B/op   1 allocs/op
BenchmarkPrintPctq               2000000     898.00 ns/op       32 B/op   4 allocs/op
BenchmarkPrintPctxString         2000000     646.00 ns/op       24 B/op   2 allocs/op
BenchmarkPrintPctxByte           3000000     424.00 ns/op        4 B/op   1 allocs/op
BenchmarkPrintPctt               5000000     352.00 ns/op        1 B/op   1 allocs/op
BenchmarkPrintPctT               2000000     627.00 ns/op       32 B/op   2 allocs/op
BenchmarkPrintPctf               1000000    1627.00 ns/op        8 B/op   1 allocs/op
BenchmarkPrintPcte               2000000     828.00 ns/op        8 B/op   1 allocs/op
BenchmarkPrintPctp               5000000     367.00 ns/op        0 B/op   0 allocs/op
BenchmarkPrintStringer           1000000    1037.00 ns/op       24 B/op   2 allocs/op
BenchmarkAbs                   300000000       5.03 ns/op        0 B/op   0 allocs/op
BenchmarkCos                    50000000      28.50 ns/op        0 B/op   0 allocs/op
BenchmarkSin                    50000000      27.70 ns/op        0 B/op   0 allocs/op
BenchmarkPow                     5000000     241.00 ns/op        0 B/op   0 allocs/op
BenchmarkLog                    50000000      32.30 ns/op        0 B/op   0 allocs/op
BenchmarkExp                    50000000      35.00 ns/op        0 B/op   0 allocs/op
BenchmarkSqrt                  100000000      10.10 ns/op        0 B/op   0 allocs/op
BenchmarkMax                   200000000       8.62 ns/op        0 B/op   0 allocs/op
BenchmarkMin                   200000000       7.90 ns/op        0 B/op   0 allocs/op
BenchmarkRand                   20000000      71.20 ns/op        0 B/op   0 allocs/op
BenchmarkStringIndex            50000000      24.50 ns/op        0 B/op   0 allocs/op
BenchmarkStringReplace           2000000     992.00 ns/op       96 B/op   2 allocs/op
BenchmarkStringToUpper           1000000    1946.00 ns/op       96 B/op   2 allocs/op
BenchmarkStringToLower           1000000    2005.00 ns/op       96 B/op   2 allocs/op
ok  	github.com/PuerkitoBio/gocostmodel	225.874s
